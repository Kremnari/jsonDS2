(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{0:function(e,t,n){n("GAND"),n("GmYv"),e.exports=n("b9nV")},BEPO:function(e){e.exports=JSON.parse('{"a":false,"b":false}')},app:function(e,t,n){"use strict";n.r(t),n.d(t,"App",(function(){return T}));var i={Boolean:{$name:"Boolean",$subTypes:{},$validator:"typeof value === 'boolean' || value=='true' || value=='false';"},String:{$name:"String",$subTypes:{},$validator:"typeof value === 'string';"},Number:{$name:"Number",$subTypes:{inRange:{$name:"inRange",$params:{minimum:{$name:"minimum",$type:"Number",$required:!0},maximum:{$name:"maximum",$type:"Number",$required:!0}},$validator:"parseFloat(value) && params.minimum < parseFloat(value) && parseFloat(value) < params.maximum"}},$validator:"!isNaN(parseFloat(value)) && isFinite(value);"},BigInt:{$name:"BigInt",$subTypes:{},$validator:"true"},Array:{$name:"Array",$subTypes:{},$validator:"true"}},a={$tables:{test:{$name:"test",$contents:{testa:{$name:"testa",$props:{id:1234,name:"testc"}}},$schema:"test"},test2:{$name:"test2",$contents:{},$schema:"test2"}},$schemas:{test:{$name:"test",$fields:{id:{$name:"id",$type:"String"},name:{$name:"name",$type:"String"}}},test2:{$name:"test2",$fields:{id:{$name:"id",$type:"Number"},name:{$name:"name",$type:"String"},test:{$name:"test",$type:"Boolean"},dec:{$name:"dec",$type:"Number",$subType:"inRange",$params:{minimum:0,maximum:10},$desc:"tests in range of 0 and 10"},beta:{$name:"beta",$type:"#table",$lookup:"test"},where:{$name:"where",$type:"#definition",$lookup:"address"}}}},$definitions:{address:{$name:"address",$fields:{line1:{$name:"line1",$type:"String",$order:1},line2:{$name:"line2",$type:"String",$order:2},state:{$name:"state",$type:"String",$order:4},zipCode:{$name:"zipCode",$type:"Number",$subType:"inRange",$params:{minimum:0,maximum:99999},$order:5},city:{$name:"city",$type:"String",$order:3}},$description:"A simple address form"}},$types:i};function s(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function r(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e}var o=function(e){throw new Error(e)},l=function(){function e(e){this.baseJSON=void 0,e=e||{$tables:{},$schemas:{},$types:i,$definitions:{}},this.baseJSON=e}var t=e.prototype;return t.new=function(e,t,n){switch(void 0===n&&(n={}),e){case"table":this.baseJSON.$tables[t]={$name:t,$schema:t,$contents:n.subTables&&void 0,$subTables:n.subTables&&{}},this.baseJSON.$schemas[t]={$name:t,$fields:{}};break;case"type":return this.baseJSON.$types[t]={$name:t,$subTypes:{},$validator:"true"};case"subType":return this.baseJSON.$types[n.to].$subTypes[t]={$name:t,$params:{},$validator:"return true"};case"def":this.baseJSON.$definitions[t]={$name:t,$fields:n.$fields||{},$description:n.$description||""}}},t.add=function(e,t){var n;switch(e){case"subType_param":this.baseJSON.$types[t.subOf].$subTypes[t.to].$params[t.param.$name]=t.param;break;case"subtype":this.baseJSON.$types[t.to].$subTypes[t.param.$name]=t.param;break;case"def":n=t.$name?t:{$name:t.name||t||o("Name Required")},this.baseJSON.$definitions[n.$name]=n;break;case"content":case"contentItem":t.subOf?this.baseJSON.$tables[t.subOf].$subTables[t.to][t.item.$name]=t.item:this.baseJSON.$tables[t.to].$contents[t.item.$name]=t.item;break;case"schema_field":n={$name:t.name||o("Name required"),$type:t.type||"",$order:t.order||0},this.baseJSON.$schemas[t.where].$fields[t.name]=n;break;case"subTable":this.baseJSON.$tables[t.base].$subTables[t.name]={};break;default:console.log("%cdefine add behaviour","color: orange; background: lightgrey")}},t.edit=function(e,t){switch(e){case"def":var n=t.$name||t.name||t,i=this.baseJSON.$definitions[n]||this.new("def",n)||this.baseJSON.$definitions[n];return JSON.parse(JSON.stringify(i));case"schema":var a=this.baseJSON.$schemas[this.baseJSON.$tables[t].$schema];if(!a)throw new ReferenceError("Cannot locate schema to edit....");return JSON.parse(JSON.stringify(a));case"type":var s=this.baseJSON.$types[t.type];return s||(s=this.new("type",t.type)),t.subT&&((s=s.$subTypes[t.subT])||(s=this.new("subType",t.subT,{to:t.type}))),JSON.parse(JSON.stringify(s));default:console.log("%cdefine edit behaviour","color: orange; background: lightgrey")}},t.list=function(e,t){void 0===t&&(t="keys");var n=this.baseJSON;return"string"==typeof e&&(e=e.split("/")),e.forEach((function(e){return n=n[e]})),Object[t](n)},t.get=function(e,t){void 0===t&&(t=!1);var n=this.baseJSON;return"string"==typeof e&&(e=e.split("/")),e.forEach((function(e){return n=n[e]})),t?n:JSON.parse(JSON.stringify(n))},t.delete=function(e,t,n){switch(e){case"table":
//!   I.E.  there's no built in copy function
delete this.baseJSON.$schemas[this.baseJSON.$tables[t].$schema],delete this.baseJSON.$tables[t];break;case"contentItem":n.subOf?delete this.baseJSON.$tables[n.subOf].$subTables[n.base][t]:delete this.baseJSON.$tables[n.base].$contents[t];break;case"def":delete this.baseJSON.$definitions[t.$name||t]}},t.save=function(e,t){switch(e){case"contents":this.baseJSON.$tables[t.where].$contents=t.contents;case"def":this.baseJSON.$definitions[t.$name]=t;break;case"schema":this.baseJSON.$schemas[t.$name]=t;break;case"type":t.subOf?this.baseJSON.$types[t.subOf].$subTypes[t.schema.$name]=t.schema:this.baseJSON.$types[t.schema.$name]=t.schema;break;default:console.log("%cdefine save behaviour","color: orange; background: lightgrey")}},r(e,[{key:"tables_list",get:function(){return Object.values(this.baseJSON.$tables)}},{key:"tables_list_base",get:function(){return this.baseJSON.$tables}},{key:"tables_list_keys",get:function(){return Object.keys(this.baseJSON.$tables)}},{key:"types_list",get:function(){return Object.values(this.baseJSON.$types)}},{key:"types_list_base",get:function(){return this.baseJSON.$types}},{key:"defs_list_keys",get:function(){return Object.keys(this.baseJSON.$definitions)}}]),e}(),u=function(){function e(e){this.base=e,this.t=new l}var t=e.prototype;return t.addToSchema=function(e,t){e&&(!this.schema&&(this.schema={}),this.schema[e]=this.foundFields[e][t||0])},t.schemaPush=function(){this.t.new("table",this.at);for(var e=0,t=Object.entries(this.schema);e<t.length;e++){var n=t[e],i=n[0],a=n[1];this.t.add("schema_field",{name:i,type:a})}},t.TypeOf=function(e){var t={}.toString.call(e).match(/\s([a-zA-Z]+)/)[1];return"Array"==t&&(t+=":"+this.TypeOf(e[0]),console.log("atArray::"+t)),"Object"==t&&(console.log("object"),console.log(e)),t},r(e,[{key:"tables_list",get:function(){return Object.keys(this.base)}},{key:"table",set:function(e){this.at=e}},{key:"fields",get:function(){if(!this.at)return!1;for(var e={},t=0,n=Object.keys(this.base[this.at]);t<n.length;t++)for(var i=n[t],a=0,s=Object.entries(this.base[this.at][i]);a<s.length;a++){var r=s[a],o=r[0],l=r[1],u=this.TypeOf(l);e[o]?e[o].includes(u)||e[o].push(u):e[o]=[u]}return this.foundFields=e,e}}]),e}();var d,c=n("ztCj"),p=n("Iab2"),b=n("aurelia-dialog"),f=n("resources/dialog/loadProject"),h=n("resources/dialog/saveProject"),m=n("resources/dialog/prompt"),v=n("aurelia-framework"),y=n("aurelia-templating-resources");function g(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return $(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0;return function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function w(e,t,n,i,a,s,r){try{var o=e[s](r),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(i,a)}function S(e){return function(){var t=this,n=arguments;return new Promise((function(i,a){var s=e.apply(t,n);function r(e){w(s,i,a,r,o,"next",e)}function o(e){w(s,i,a,r,o,"throw",e)}r(void 0)}))}}var T=Object(v.b)(b.DialogService,y.a)(d=function(){function e(e,t,n){var i=this;this.jDS2=null,this.editor=null,this.validatorsCache={},this.basicTypes=["Number","String","Boolean","BigInt","Object"],window.jds2=this,this.dialogService=e,this.signaler=t,this.save_as=p.saveAs,this.baseApp=this,setTimeout((function(){i.defaultLoad()}),0)}var t=e.prototype;return t.defaultLoad=function(){var e=S(regeneratorRuntime.mark((function e(){var t,n,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=new c.a("jsonDS2_settings","settings"),e.next=4,Object(c.c)(t);case 4:if(this.idbSettings=e.sent,!this.idbSettings.includes("lastSave")){e.next=15;break}return e.next=8,Object(c.b)("lastSave",t);case 8:return n=e.sent,e.next=11,Object(c.b)(n,new c.a("jsonDS2_projects","projects"));case 11:i=e.sent,this.jDS2=new l(i),e.next=16;break;case 15:throw new ReferenceError("No lastsave available");case 16:e.next=21;break;case 18:e.prev=18,e.t0=e.catch(0),this.jDS2=new l(a);case 21:case"end":return e.stop()}}),e,this,[[0,18]])})));return function(){return e.apply(this,arguments)}}(),t.loadTFMG=function(){var e=S(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("data_source.json");case 2:return t=e.sent,e.t0=u,e.next=6,t.json();case 6:e.t1=e.sent,this.tfmg=new e.t0(e.t1),console.log("loaded");case 9:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),t.loadProject=function(){var e=this;this.dialogService.open({viewModel:f.LoadProject,model:null,lock:!1}).whenClosed((function(t){t.wasCancelled?console.log("load cancelled"):(e.jDS2=null,e.jDS2=new l(t.output))}))},t.saveProject=function(){this.dialogService.open({viewModel:h.SaveProject,model:this.jDS2.baseJSON,lock:!1}).whenClosed((function(e){e.wasCancelled&&console.log("save cancelled")}))},t.isTableValid=function(e,t){var n=this,i=["$tables",e,"$contents"];return t&&i.splice(-1,1,"$subTables",t),this.jDS2.list(i,"values").every((function(t){return n.isContentValid(e,t)}))},t.isContentValid=function(e,t){var n=this;if(e&&t)return"string"==typeof t&&(t=this.jDS2.get(["$tables",e,"$contents",t],!0)),this.jDS2.list(["$schemas",e,"$fields"],"values").every((function(e){return n.isFieldValid(e,t.$props[e.$name])}))},t.isFieldValid=function(e,t){return this.validatorLookup(t,e)},t.promptEditorSave=function(){var e=S(regeneratorRuntime.mark((function e(){var t=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.suppressEditorSave){e.next=2;break}return e.abrupt("return",Promise.resolve());case 2:if(!this.editor){e.next=6;break}return e.abrupt("return",new Promise((function(e){t.dialogService.open({viewModel:m.Prompt,model:"Would you like to save the editor",lock:!1}).whenClosed((function(n){n.wasCancelled||t.editorSave(),t.editor=null,e()}))})));case 6:return e.abrupt("return",Promise.resolve());case 7:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),t.editorSave=function(){switch(this.editor.as){case"editTable":this.jDS2.save("schema",{$name:this.editor.schema});break;case"list":this.jDS2.save("contents",{where:this.editor.table,contents:this.editor.list});break;case"editDef":this.jDS2.save("def",this.editor.def);break;case"editSchema":this.jDS2.save("schema",this.editor.schema);break;case"editType":this.jDS2.save("type",{schema:this.editor.schema,subOf:this.editor.subTypeOf});break;default:console.log("define saving behavior for: "+this.editor.as)}this.signaler.signal("updateValids"),this.editor=null},t.editorDelete=function(e){if(confirm("Are you sure you want to delete?")){switch(this.editor.as){case"list":e?(this.jDS2.delete("contentItem",e,{base:this.editor.table,subOf:this.editor.subOf}),this.editor.list=this.jDS2.get(["$tables",this.editor.subOf||this.editor.table,this.editor.subOf?"$subTables":"$contents",this.editor.subOf&&this.editor.table])):(this.jDS2.delete("table",this.editor.table),this.editor=null);break;case"editSchema":this.jDS2.delete("table",this.editor.table),this.editor=null;break;case"editDef":this.jDS2.delete("def",this.editor.def),this.editor=null;break;default:console.log("define delete behavior for: "+this.editor.as)}this.signaler.signal("generalUpdate"),this.signaler.signal("updateValids")}},t.editorCancel=function(){this.editor=null},t.editorGet=function(e){switch(this.editor.as){case"list":this.editor.CIEdit=this.jDS2.get(["$tables",this.editor.subOf||this.editor.table,this.editor.subOf?"$subTables":"$contents",this.editor.subOf?this.editor.table:e,this.editor.subOf&&e]);default:return!1}},t.editTableSchema=function(){var e=S(regeneratorRuntime.mark((function e(t){var n,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((null==(n=this.editor)?void 0:n.table)!=t||"editTable"!=(null==(i=this.editor)?void 0:i.as)){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,this.promptEditorSave();case 4:if(t){e.next=7;break}return this.editor=null,e.abrupt("return");case 7:this.editor={as:"editTable",table:t,schema:this.jDS2.edit("schema",t)};case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t.editTypeOf=function(){var e=S(regeneratorRuntime.mark((function e(t,n){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.promptEditorSave();case 2:if((null==(i=this.editor)?void 0:i.type)!=(n||t)){e.next=5;break}return this.editor=null,e.abrupt("return");case 5:this.editor={as:"editType",type:n||t,subTypeOf:n&&t,schema:this.jDS2.edit("type",{type:t,subT:n})},this.signaler.signal("generalUpdate");case 7:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}(),t.show=function(){var e=S(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.promptEditorSave();case 2:e.t0=t,e.next="table"===e.t0?5:"subTable"===e.t0?7:9;break;case 5:return this.editor={as:"list",table:n.name,list:this.jDS2.get(["$tables",n.name,"$contents"]),schema:this.jDS2.get(["$schemas",n.name])},e.abrupt("break",9);case 7:return this.editor={as:"list",table:n.sub,subOf:n.base,list:this.jDS2.get(["$tables",n.base,"$subTables",n.sub]),schema:this.jDS2.get(["$schemas",n.base])},e.abrupt("break",9);case 9:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}(),t.showTableContent=function(){var e=S(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:this.editor={as:"list",table:t,list:this.jDS2.get(["$tables",t,"$contents"]),schema:this.jDS2.get(["$schemas",t])};case 1:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t.addParam=function(e){
//! Gonna nuke this whole function...
var t={$name:e.newParamName,$type:e.newParamType.base,$subType:e.newParamType.subT,$lookup:e.newParamType.lookup_table,$desc:e.newParamDesc};this.editor.schema.$params||(this.editor.schema.$params={}),this.editor.schema.$params[e.newParamName]=t,//! IMPURE should not touch jDS2 unless in a save function
this.jDS2.add("subType_param",{to:this.editor.schema.$name,subOf:this.editor.subTypeOf,param:t}),this.signaler.signal("generalUpdate")},t.new=function(e,t){switch(e){case"def":this.jDS2.new("def",t.name,t),this.signaler.signal("generalUpdate")}},t.add=function(e,t){switch(e){case"subtype":if("editType"==this.editor.as&&!this.editor.subTypeOf)break;this.jDS2.add("subtype",{to:this.editor.type,param:{$name:newSubTypeName}});break;case"def":if(!t)return;this.jDS2.add("def",t);break;case"def_field":if(!t.$name)return;this.editor.def.$fields[t.$name]=t;break;case"schema_field":if(!t.$name)return;this.editor.schema.$fields[t.$name]=t;break;case"table":if(!t.name)return;this.jDS2.new("table",t.name,t);break;case"subTable":var n=prompt("Enter name for new subTable");if(!n)return;this.jDS2.add("subTable",{base:t.base,name:n})}this.signaler.signal("generalUpdate"),this.signaler.signal("defUpdate")},t.edit=function(){var e=S(regeneratorRuntime.mark((function e(t,n){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.promptEditorSave();case 2:e.t0=t,e.next="def"===e.t0?5:"schema"===e.t0?10:15;break;case 5:if(n.name){e.next=7;break}return e.abrupt("return");case 7:return this.editor={as:"editDef",def:this.jDS2.edit("def",n.name)},this.signaler.signal("generalUpdate"),e.abrupt("break",15);case 10:if(n.name&&n.name!=(null==(i=this.editor)?void 0:i.table)){e.next=12;break}return e.abrupt("return");case 12:return this.editor={as:"editSchema",table:n.name,schema:this.jDS2.edit("schema",n.name)},this.signaler.signal("generalUpdate"),e.abrupt("break",15);case 15:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}(),t.editContentItem=function(e){this.editor.CIEdit=JSON.parse(JSON.stringify(this.editor.list[e]))},t.storeContentItem=function(){this.jDS2.add("contentItem",{to:this.editor.table,subOf:this.editor.subOf,item:this.editor.CIEdit}),this.editor.list=this.jDS2.get(["$tables",this.editor.subOf||this.editor.table,this.editor.subOf?"$subTables":"$contents",this.editor.subOf&&this.editor.table]),this.editor.CIEdit=null,this.signaler.signal("updateValids")},t.validator=function(e,t){return Function("value",t)(e)},t.validatorLookup=function(e,t,n){if(void 0===n&&(n=!1),"#table"==t.$type)return this.jDS2.list(["$tables",t.$lookup,"$contents"],"keys").includes(e);if("#definition"==t.$type){for(var i,a=g(this.jDS2.list(["$definitions",t.$lookup,"$fields"],"values"));!(i=a()).done;)i.value;return!0}var s=this.jDS2.types_list_base,r="type:"+t.$type;this.validatorsCache[r]||(this.validatorsCache[r]=Function("value","return "+s[t.$type].$validator));var o=this.validatorsCache[r](e);if(!t.$subType)return o;var l=r+"UsubT:"+t.$subType;this.validatorsCache[l]||(this.validatorsCache[l]=Function("value","params","return "+s[t.$type].$subTypes[t.$subType].$validator));var u=this.validatorsCache[l](e,t.$params);return o&&u},t.addField=function(e,t){var n={$name:e,$type:t.$name};this.editor.schema.$fields.push(n),this.editor.CIEdit[e]="",this.newFieldType=null,this.newFieldName=null},e}())||d},"app.css":function(e,t,n){(t=n("JPst")(!1)).push([e.i,"body > nav {\n  position: fixed\n\n}\ndiv.content {\n  position: absolute;\n  top: 40px;\n  bottom: 2px;\n  left: 2px;\n  right: 2px;\n\n}\n\n.content > section {\n  display: inline-block;\n  position: absolute;\n  border: 2px solid darkslategray;\n  border-radius: 5%;\n  box-sizing: border-box;\n  padding: 5px;\n}\n\n#tablesList {\n  top: 0;\n  left: 0;\n  height: 50%;\n  width: 40%;\n}\n\n#editorArea {\n  top: 0;\n  right: 0;\n  height: 70%;\n  width: 60%;\n}\n#editorArea section {\n  position: relative;\n  height: 80%;\n  overflow-y: scroll;\n}\n#editorArea ul {\n  padding: 0px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n#editorArea .contentList {\n  height: 40%;\n  overflow: hidden;\n  overflow-y: auto;\n  position: relative;\n}\n#editorArea .contentList li {\n  display: inline-flex;\n}\n#editorArea .contentList li > span {\n  width: 150px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n#editorArea #CIEditor {\n  position: absolute;\n  height: 60%;\n  bottom: 0;\n}\n\n#typesList {\n  bottom: 0;\n  left: 0;\n  height: 50%;\n  width: 40%;\n}\ndiv.editorControls {\n  bottom: 0px;\n  position: absolute;\n  padding-bottom: 2vh\n}\n\n.labelLinked {\n  display: none;\n}\n.labelLinked ~ div {\n  display: none;\n}\n.labelLinked:checked ~ div {\n  display: inline;\n}\n\n.fieldSelectorHead {\n  font-weight: bold;\n  text-decoration: underline;\n}\nfield-selector > * {\n  margin-left: 5px;\n}\nlabel.selectHeader {\n  display: inline;\n}\n.sectionLinked, .sectionLinked ~ div {\n  display: none;\n}\n#viewTypes:checked ~ #viewTypesPane {\n  display: inline\n}\n#viewDefs:checked ~ #viewDefsPane {\n  display: inline\n}\n\nvalidator > .valid {\n  color: green;\n}\nvalidator > .invalid {\n  color: red;\n}\n\ntype-input {\n  display: inline-block;\n}\n.inline {\n  display: inline\n}\n",""]),e.exports=t},"app.html":function(e,t,n){e.exports='<template>\n  <require from="app.css"></require>\n  <require from="resources/viewSections/editors/type.html" as="type-editor"></require>\n  <require from="resources/viewSections/editors/definition" as="definition-editor"></require>\n  <require from="resources/viewElements/typeInput" as="type-input"></require>\n  <nav>\n    <button click.delegate="newProject()">New</button>\n    <button click.delegate="loadProject()">Load...</button>\n    <button click.delegate="saveProject()">Save...</button>\n    <button click.delegate="loadTFMG()">tfmg</button>\n    Editor Save:<input type="checkbox" checked value.bind="suppressEditorSave">\n  </nav>\n  <div class="content">\n    <section id="tablesList">\n      <h4>Table/Object List</h4>\n      <div note="add new static content table">\n        <input type="text" value.bind="newTable"></input>\n        <label for="subTables">SubTables?</label><input type="checkbox" checked.bind="subTables" id="subTables">\n        <button click.delegate="add(\'table\', {name: newTable, subTables })">+&gt;</button>\n      </div>\n      <div repeat.for="t of jDS2.list([\'$tables\'], \'values\') & signal:\'generalUpdate\'" if.bind="jDS2">\n        <div if.bind="t.$contents">\n          <span click.delegate="show(\'table\', {name: t.$name})">${t.$name}</span>\n          <validator valid.bind="isTableValid(t.$name) & signal:\'updateValids\'"></validator>\n          <span click.delegate="edit(\'schema\', {name: t.$name})">&#9998;</span>\n        </div>\n        <div if.bind="t.$subTables">\n          <span style="text-decoration: underline;">${t.$name}</span>\n          <span click.delegate="add(\'subTable\', {base: t.$name})">new...</span>\n          <span click.delegate="edit(\'schema\', {name: t.$name})">&#9998;</span>\n          <div repeat.for="sT of jDS2.list([\'$tables\', t.$name, \'$subTables\'], \'keys\') & signal:\'generalUpdate\'">\n            <span click.delegate="show(\'subTable\', {base: t.$name, sub: sT})">${sT}</span>\n            <validator valid.bind="isTableValid(t.$name, sT) & signal:\'updateValids\'"></validator>\n          </div>\n        </div>\n        <hr>\n      </div>\n    </section>\n    <section id="editorArea" if.bind="editor.as">\n      <section if.bind="editor.as == \'list\'">\n        <div>\n          Add new Name:\n          <input type="text" value.bind="newContentName"></input>\n          <button click.delegate="editor.CIEdit = {$name: newContentName, $props: {}}">+</button>\n        </div>\n        <div class="contentList">\n          <ul>\n            <li repeat.for="contentItem of editor.list | objectValues & signal:\'updateValids\'">\n              <span click.delegate="editorGet(contentItem.$name)">${contentItem.$name}</span>\n              <validator valid.bind="isContentValid(editor.subOf || editor.table, contentItem) & signal:\'updateValids\'"></validator>\n              <button click.delegate="editorDelete(contentItem.$name)">&#x2327;</button>\n            </li>\n          </ul>\n        </div>\n        <div id="CIEditor" if.bind="editor.CIEdit">\n          ${editor.CIEdit.$name}\n          <div repeat.for="prop of editor.schema.$fields | objectValues"> \n            ${prop.$name} - \n            <type-input value.two-way="editor.CIEdit.$props[prop.$name]" typing.bind="prop"></type-input>\n            <validator valid.bind="validatorLookup(editor.CIEdit.$props[prop.$name], prop) & signal:\'updateValids\'"></validator>\n          </div>\n          <button click.delegate="storeContentItem()">Store</button>\n          <button click.delegate="editorDelete(editor.CIEdit.$name)">Delete</button>\n          <button click.delegate="editor.CIEdit = null">Cancel</button>\n        </div>\n      </section>\n      <section\n        if.bind="editor.as == \'editSchema\'"\n        as-element="definition-editor"\n        schema.bind="editor.schema"\n        add-field.call="add(\'schema_field\', param)"\n      ></section>\n      <section\n        if.bind="editor.as == \'editDef\'"\n        as-element="definition-editor"\n        def.bind="editor.def"\n        add-field.call="add(\'def_field\', param)"\n      ></section>\n      <section\n        as-element="type-editor"\n        if.bind="editor.as == \'editType\'"\n        type.bind="editor.schema"\n        base-app.bind="baseApp"\n        sub-type-of.bind="editor.subTypeOf"\n      ></section>\n      <div class="editorControls">\n        <button click.delegate="editorCancel()">Cancel</button>\n        <button click.delegate="editorDelete()">Delete</button>\n        <button click.delegate="editorSave()">Save</button>\n      </div>\n    </section>\n    <section id="typesList">\n      <input class="sectionLinked" type="radio" name="typeOrDefs" id="viewTypes" checked>\n      <input class="sectionLinked" type="radio" name="typeOrDefs" id="viewDefs">\n      <label for="viewTypes" class="selectHeader">Types List</label>\n      <label for="viewDefs"  class="selectHeader">Definitions List</label>\n      <div id="viewTypesPane">\n        <div note="add new type">\n          <input type="text" value.bind="newTypeName"></input>\n          <button click.delegate="editTypeOf(newTypeName)">+</button>\n        </div>\n        <div repeat.for="type of jDS2.list([\'$types\'], \'values\')" if.bind="jDS2">\n          <span click.delegate="editTypeOf(type.$name)">${type.$name}</span>\n          <div repeat.for="subT of type.$subTypes | objectValues & signal:\'generalUpdate\'" if.bind="type.$subTypes">\n            <span click.delegate="editTypeOf(type.$name, subT.$name)">&nbsp;-&nbsp;${subT.$name}</span>\n          </div>\n        </div>\n      </div>\n      <div id="viewDefsPane">\n        <input type="text" value.bind="newDefName">\n        <button click.delegate="new(\'def\', {name: newDefName})">+</button>\n        <button click.delegate="edit(\'def\', {name: newDefName})">-&gt;</button>\n        <div repeat.for="defName of jDS2.list([\'$definitions\'], \'keys\') & signal:\'generalUpdate\'" if.bind="jDS2">\n            <span click.delegate="edit(\'def\', {name: defName})">${defName}</span>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n'},main:function(e,t,n){"use strict";n.d(t,"configure",(function(){return a}));n("ls82");var i=n("BEPO");n("70NS");function a(e){e.use.standardConfiguration().feature("resources/index").plugin("aurelia-dialog"),e.use.developmentLogging(i.a?"debug":"warn"),i.b&&e.use.plugin("aurelia-testing"),e.start().then((function(){return e.setRoot("app")}))}},"resources/dialog/loadProject":function(e,t,n){"use strict";n.r(t),n.d(t,"LoadProject",(function(){return o}));var i=n("aurelia-dialog"),a=n("ztCj");function s(e,t,n,i,a,s,r){try{var o=e[s](r),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(i,a)}function r(e){return function(){var t=this,n=arguments;return new Promise((function(i,a){var r=e.apply(t,n);function o(e){s(r,i,a,o,l,"next",e)}function l(e){s(r,i,a,o,l,"throw",e)}o(void 0)}))}}var o=function(){function e(e){this.loadName=null,this.message="nothing loaded",this.controller=e,this.idbTarget=new a.a("jsonDS2_projects","projects")}var t=e.prototype;return t.activate=function(){var e=r(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)(this.idbTarget);case 2:this.idbs=e.sent;case 3:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),t.loadFile=function(){var e=r(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=JSON,e.next=3,t.target.files[0].text();case 3:e.t1=e.sent,this.loadedData=e.t0.parse.call(e.t0,e.t1),this.message="File Loaded";case 6:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t.loadDB=function(){var e=r(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.b)(t,this.idbTarget);case 2:this.loadedData=e.sent,this.message="iDB loaded";case 4:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t.complete=function(){var e=r(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.loadedData){e.next=4;break}this.controller.ok(this.loadedData),e.next=8;break;case 4:if(null==this.loadName){e.next=8;break}return e.next=7,Object(a.b)(this.loadName,this.idbTarget);case 7:this.loadedData=e.sent;case 8:this.controller.ok(this.loadedData);case 9:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),e}();o.inject=[i.DialogController]},"resources/dialog/loadProject.html":function(e,t){e.exports='<template>\n  <ux-dialog>\n    <ux-dialog-header>\n      <h4>Select Project to load</h4>\n    </ux-dialog-header>\n    <ux-dialog-body>\n      <h5>From IDB</h5>\n      <select value.bind="loadName">\n        <option repeat.for="idb of idbs" model.bind="idb">${idb}</option>\n      </select>\n      <button click.delegate="loadDB(loadName)">Load DB</button>\n      <h5>From File</h5>\n      <input type="file" accept=".jds2,.json" id="jsonFileSelect" change.delegate="loadFile($event)">\n      <label for="jsonFileSelect">Select a File</label>\n    </ux-dialog-body>\n    <ux-dialog-footer>\n      <span>${message}</span>\n      <button click.trigger="complete()">Done</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>\n'},"resources/dialog/prompt":function(e,t,n){"use strict";n.r(t),n.d(t,"Prompt",(function(){return r}));var i,a=n("aurelia-framework"),s=n("aurelia-dialog"),r=Object(a.b)(s.DialogController)(i=function(){function e(e){this.controller=e,this.answer=null,e.settings.centerHorizontalOnly=!0}return e.prototype.activate=function(e){this.message=e},e}())||i},"resources/dialog/prompt.html":function(e,t){e.exports='<template>\n  <ux-dialog>\n    <ux-dialog-body>\n      <h3>${message}</h3>\n    </ux-dialog-body>\n    <ux-dialog-footer>\n      <button click.trigger = "controller.cancel()">Cancel</button>\n      <button click.trigger = "controller.ok(message)">Ok</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>\n'},"resources/dialog/saveProject":function(e,t,n){"use strict";n.r(t),n.d(t,"SaveProject",(function(){return l}));var i=n("aurelia-dialog"),a=n("Iab2"),s=n("ztCj");function r(e,t,n,i,a,s,r){try{var o=e[s](r),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(i,a)}function o(e){return function(){var t=this,n=arguments;return new Promise((function(i,a){var s=e.apply(t,n);function o(e){r(s,i,a,o,l,"next",e)}function l(e){r(s,i,a,o,l,"throw",e)}o(void 0)}))}}var l=function(){function e(e){this.saveAs=null,this.saveName=null,this.controller=e,this.idbTarget=new s.a("jsonDS2_projects","projects")}var t=e.prototype;return t.activate=function(){var e=o(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,Object(s.c)(this.idbTarget);case 3:this.idbs=e.sent,e.next=8;break;case 6:e.prev=6,e.t0=e.catch(0);case 8:return e.prev=8,this.idbs||(this.idbs=[]),e.finish(8);case 11:this.saveData=t;case 12:case"end":return e.stop()}}),e,this,[[0,6,8,11]])})));return function(t){return e.apply(this,arguments)}}(),t.done=function(){var e=o(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=this.saveAs,e.next="replaceIDB"===e.t0?3:"newIDB"===e.t0?6:"newFile"===e.t0?9:12;break;case 3:return e.next=5,this.asDB();case 5:return e.abrupt("break",12);case 6:return e.next=8,this.asDB();case 8:return e.abrupt("break",12);case 9:return e.next=11,this.saveFile();case 11:return e.abrupt("break",12);case 12:this.controller.ok();case 13:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),t.saveFile=function(){Object(a.saveAs)(new Blob([JSON.stringify(this.saveData)],{type:"application/json"}),this.saveName+".jds2")},t.asDB=function(){var e=o(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log(this.saveName),console.log(this.saveData),e.next=4,Object(s.d)(this.saveName,this.saveData,this.idbTarget);case 4:return e.next=6,Object(s.d)("lastSave",this.saveName,new s.a("jsonDS2_settings","settings"));case 6:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),e}();l.inject=[i.DialogController]},"resources/dialog/saveProject.html":function(e,t){e.exports='<template>\n  <ux-dialog>\n    <ux-dialog-header>\n      <h4>Save to...</h4>\n    </ux-dialog-header>\n    <ux-dialog-body>\n      Replace IDB<input type="radio" value="replaceIDB" name="saveType" checked.bind="saveAs">\n      <select value.bind="saveName">\n        <option repeat.for="idb of idbs" model.bind="idb">${idb}</option>\n      </select>\n      <h5>As...</h5>\n      <input type="radio" value="newIDB" name="saveType" checked.bind="saveAs"><label for="newIDB">New IDB</label>\n      <input type="radio" value="newFile" name="saveType" checked.bind="saveAs"><label for="newFile">New File</label><br />\n      <input type="text" value.bind="saveName" disabled.bind="saveAs==\'replaceIDB\'"><span show.bind="saveAs==\'newFile\'">.jds2</span>\n    </ux-dialog-body>\n    <ux-dialog-footer>\n      <button click.delegate="done()">Commit</button>\n      <button click.trigger="controller.cancel()">Cancel</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>\n'},"resources/index":function(e,t,n){"use strict";function i(e){e.globalResources(["resources/value-converters/objectEntries","resources/value-converters/objectValues","resources/value-converters/objectKeys","resources/value-converters/stripNulls","resources/value-converters/sorter","resources/viewElements/validator.html"])}n.r(t),n.d(t,"configure",(function(){return i}))},"resources/value-converters/objectEntries":function(e,t,n){"use strict";n.r(t),n.d(t,"ObjectEntriesValueConverter",(function(){return i}));var i=function(){function e(){}return e.prototype.toView=function(e){return e?Object.entries(e):[]},e}()},"resources/value-converters/objectKeys":function(e,t,n){"use strict";n.r(t),n.d(t,"ObjectKeysValueConverter",(function(){return i}));var i=function(){function e(){}return e.prototype.toView=function(e){return e?Object.keys(e):[]},e}()},"resources/value-converters/objectValues":function(e,t,n){"use strict";n.r(t),n.d(t,"ObjectValuesValueConverter",(function(){return i}));var i=function(){function e(){}return e.prototype.toView=function(e){return e?Object.values(e):[]},e}()},"resources/value-converters/sorter":function(e,t,n){"use strict";n.r(t),n.d(t,"SorterValueConverter",(function(){return i}));var i=function(){function e(){}return e.prototype.toView=function(e,t,n){var i="ascending"==n?1:-1;return e.slice(0).sort((function(e,n){return(e[t]-n[t])*i}))},e}()},"resources/value-converters/stripNulls":function(e,t,n){"use strict";n.r(t),n.d(t,"StripNullsValueConverter",(function(){return i}));var i=function(){function e(){}return e.prototype.toView=function(e){return e.filter((function(e){return null!=e}))},e}()},"resources/viewElements/definitionForm":function(e,t,n){"use strict";n.r(t),n.d(t,"DefinitionForm",(function(){return p}));var i,a,s,r,o=n("app"),l=n("aurelia-framework"),u=n("hij8");function d(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function c(e,t,n,i,a){var s={};return Object.keys(i).forEach((function(e){s[e]=i[e]})),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),s),a&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(a):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(e,t,s),s=null),s}var p=Object(l.b)(o.App)((s=c((a=function(){function e(e){d(this,"value",s,this),d(this,"defName",r,this),this.baseApp=e}var t=e.prototype;return t.bind=function(){this.definition=this.baseApp.jDS2.get(["$definitions",this.defName])},t.defNameValueChanged=function(){this.definition=this.baseApp.jDS2.get(["$definitions",this.defName])},e}()).prototype,"value",[u.q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=c(a.prototype,"defName",[u.q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),i=a))||i},"resources/viewElements/definitionForm.html":function(e,t,n){e.exports='<template>\n  <require from="resources/viewElements/typeInput" as="type-input"></require>\n  DefForm: ${definition.$name}\n  <div repeat.for="field of definition.$fields | objectValues">\n    <type-input\n      value.bind="value[field.$name]"\n      typing.bind="field"\n    ></type-input>\n  </div>\n</template>\n'},"resources/viewElements/subTypeSelector":function(e,t,n){"use strict";n.r(t),n.d(t,"SubTypeSelector",(function(){return p}));var i,a,s,r,o=n("app"),l=n("aurelia-framework"),u=n("hij8");function d(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function c(e,t,n,i,a){var s={};return Object.keys(i).forEach((function(e){s[e]=i[e]})),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),s),a&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(a):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(e,t,s),s=null),s}var p=Object(l.b)(o.App)((s=c((a=function(e){d(this,"typing",s,this),d(this,"skip",r,this),this.signaler=e.signaler,this.types=e.jDS2.get(["$types"]),this.tables=e.jDS2.list(["$tables"],"keys"),this.definitions=e.jDS2.list(["$definitions"],"keys")}).prototype,"typing",[u.q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=c(a.prototype,"skip",[u.q],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),i=a))||i},"resources/viewElements/subTypeSelector.html":function(e,t){e.exports='<template>\n  Base:\n  <select value.bind="typing.base" change.trigger="signaler.signal(\'typeSelectUpdate\')">\n    <option repeat.for="type of types | objectValues" model.bind="type.$name">${type.$name}</option>\n    <option value="#table" if.bind="!skip.includes(\'table\')">Table</option>\n    <option value="#definition" if.bind="!skip.includes(\'def\')">Definition</option>\n  </select>\n  <div if.bind="typing.base && typing.base!=\'#table\' && typing.base!=\'#definition\' & signal:\'typeSelectUpdate\'">\n    SubType:\n    <select value.bind="typing.subT">\n      <option model.bind="undefined">*base*</option>\n      <option repeat.for="subT of types[typing.base].$subTypes | objectValues & signal:\'typeSelectUpdate\'" model.bind="subT.$name">${subT.$name}</option>\n    </select>\n  </div>\n  <div if.bind="typing.base && typing.base==\'#table\' & signal:\'typeSelectUpdate\'">\n    Select Table:\n    <select value.bind="typing.lookup" change.trigger="lookupTrigger">\n      <option repeat.for="t of tables" model.bind="t">${t}</option>\n    </select>\n  </div>\n  <div if.bind="typing.base && typing.base==\'#definition\' & signal: \'typeSelectUpdate\'">\n    Select Definition:\n    <select value.bind="typing.lookup" change.trigger="lookupTrigger">\n      <option repeat.for="d of definitions" model.bind="d">${d}</option>\n    </select>\n  </div>\n</template>\n'},"resources/viewElements/typeInput":function(e,t,n){"use strict";n.r(t),n.d(t,"TypeInput",(function(){return p}));var i,a,s,r,o=n("app"),l=n("aurelia-framework"),u=n("hij8");function d(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function c(e,t,n,i,a){var s={};return Object.keys(i).forEach((function(e){s[e]=i[e]})),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),s),a&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(a):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(e,t,s),s=null),s}var p=Object(l.b)(o.App)((s=c((a=function(){function e(e){d(this,"value",s,this),d(this,"typing",r,this),this.baseApp=e}var t=e.prototype;return t.bind=function(){switch(this.typing.$type){case"#table":this.control="table",this.elements=this.baseApp.jDS2.list(["$tables",this.typing.$lookup,"$contents"],"keys");break;case"#definition":this.control="definition",this.collapseMe=!1,null!=this.value||(this.value={}),this.defLines=this.baseApp.jDS2.list(["$definitions",this.typing.$lookup,"$fields"],"values");break;case"Boolean":this.control="boolean";break;case"Number":this.control="number";break;case"Array":this.control="Array";break;default:this.control="basic",this.type=this.baseApp.jDS2.get(["$types",this.typing.$type]),this.typing.$subType&&(this.subType=this.baseApp.jDS2.get(["$types",this.typing.$type,"$subTypes",this.typing.$subType]))}},t.valueChanged=function(){this.baseApp.signaler.signal("updateValids")},t.toggleSub=function(){this.collapseMe=!this.collapseMe},e}()).prototype,"value",[u.q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=c(a.prototype,"typing",[u.q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),i=a))||i},"resources/viewElements/typeInput.html":function(e,t){e.exports='<template switch.bind="control">\n  \x3c!-- span>${type.$name}\n    ${subType.$name}</span --\x3e\n  <div if.bind="control==\'definition\'">\n    <span click.delegate="toggleSub()">Definition::${typing.$lookup}</span>\n    <div show.bind="collapseMe">\n      <div repeat.for="each of defLines">\n        ${each.$name}: \n        <type-input value.two-way="value[each.$name]" typing.bind="each"></type-input>\n      </div>\n    </div>\n  </div>\n  <div if.bind="control==\'table\'">\n    Table:${typing.$lookup}\n    <select value.bind="value">\n      <option repeat.for="e of elements" model.bind="e">${e}</option>\n      \x3c!--NYI need to add a "new"--\x3e\n    </select>\n  </div>\n  <div if.bind="control==\'boolean\'">\n    ${$type.$name}\n    <input type="checkbox" checked.bind="value">\n  </div>\n  <div if.bind="control==\'number\'">\n    ${$type.$name}\n    <input type="number" value.bind="value">\n  </div>\n  <div if.bind="control==\'Array\'">\n    ${type.$name}\n  </div>\n  <div if.bind="control==\'basic\'"> \n    ${$type.$name}\n    <input type="text" value.bind="value">\n  </div>\n</template>\n'},"resources/viewElements/validator.html":function(e,t){e.exports='<template bindable="valid">\n  <span class="valid" show.bind="valid">&#x2713;</span>\n  <span class="invalid" show.bind="!valid">&#x274C;</span>\n</template>\n'},"resources/viewSections/editors/definition":function(e,t,n){"use strict";n.r(t),n.d(t,"Definition",(function(){return p}));var i,a,s,r,o=n("hij8"),l=n("aurelia-framework"),u=n("app");function d(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function c(e,t,n,i,a){var s={};return Object.keys(i).forEach((function(e){s[e]=i[e]})),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),s),a&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(a):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(e,t,s),s=null),s}var p=Object(l.b)(u.App)((s=c((a=function(){function e(e){d(this,"def",s,this),d(this,"schema",r,this),this.buttonText="add",this.editType=null,this.types=e.jDS2.list(["$types"],"values"),this.signaler=e.signaler,this.baseApp=e}var t=e.prototype;return t.bind=function(){this.editType=(this.def?"def":this.schema&&"schema")||b("needs schema or definition"),this.pointer=this.def?this.def:this.schema},t.addField=function(e){this.baseApp.add(this.editType+"_field",e)},t.getDef=function(e){e&&(this.addDef=this.baseApp.jDS2.get(["$definitions",e]),this.fieldTyping.defFields={})},t.edit=function(e){this.fieldName=e.$name,this.fieldOrder=e.$order,this.fieldTyping.base=e.$type,this.fieldTyping.subT=e.$subType,this.fieldTyping.lookup=e.$lookup,this.fieldParams=e.$params,this.buttonText="edit"},t.del=function(){delete this.pointer.$fields[this.newField],this.signaler.signal("defUpdate")},t.addScoped=function(){this.addField({$name:this.fieldName,$order:!!this.fieldOrder&&this.fieldOrder||void 0,$type:this.fieldTyping.base,$subType:this.fieldTyping.subT,$lookup:this.fieldTyping.lookup,$params:this.fieldParams||void 0}),this.clearScoped()},t.clearScoped=function(){this.fieldName=null,this.fieldOrder=null,this.fieldTyping={},this.fieldParams={},this.buttonText="add",this.signaler.signal("defUpdate"),this.signaler.signal("typeSelectUpdate")},t.fieldSubtypeChanged=function(e){this.newFieldParams=e?{}:void 0,this.signaler.signal("defUpdate")},t.editOld=function(e){this.newField=e.$name,this.newFieldOrder=e.$order,this.fieldSubtype=e.$subType,this.newFieldParams=e.$params,this.fieldBase=this.types[e.$type],e.$subType&&(this.fieldSubtype=this.types[e.$type].$subTypes[e.$subType]),this.buttonText="edit"},e}()).prototype,"def",[o.q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r=c(a.prototype,"schema",[o.q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),i=a))||i,b=function(e){throw new Error(e)}},"resources/viewSections/editors/definition.html":function(e,t,n){e.exports='<template>\n  <require from="resources/viewElements/subTypeSelector" as="sub-type-selector"></require>\n  <require from="resources/viewElements/definitionForm" as="definition-form"></require>\n  <h4>${pointer.$name}</h4>\n  <span if.bind="pointer.$description">\n    Description:\n    <input type="text" value.bind="pointer.$description">\n  </span>\n  <hr>\n  <div note="define new field">\n    New Name:<input type="text" value.bind="fieldName">\n    Order: <input type="number" value.bind="fieldOrder" min="0" step="1" max="100"><br>\n    <input type="hidden" value.bind="(fieldTyping = {})">\n    <sub-type-selector typing.bind="fieldTyping"></sub-type-selector>\n    <div if.bind="fieldTyping.subT">\n      <input type="hidden" value.bind="(fieldParams = {})">\n      <div repeat.for="param of types[fieldTyping.base].$subTypes[fieldTyping.subT].$params | objectValues & signal:\'typeSelectUpdate\'">\n        ${param.$name}: <input type="text" value.bind="fieldParams[param.$name]">\n      </div>\n    </div>\n    <div if.bind="fieldTyping.base==\'#definition\' && fieldTyping.lookup & signal:\'lookupTrigger\'">\n      <input type="hidden" value.bind="(fieldTyping.defFields = {})">\n      \x3c!-- definition-form\n        value.bind="fieldTyping.defFields"\n        def-name.bind="fieldTyping.lookup"\n      ></!--\x3e\n    </div>\n    \x3c!--STS REPLACE START--\x3e\n    \x3c!--\n      vars: fieldBase : stores name\n      fieldSubtype : store object\n      newFieldParams[by param of subtype] : store text\n    --\x3e\n    \x3c!--\n    <div if.bind="fieldBase!=\'#table\'">\n      SubType:\n      <select value.bind="fieldSubtype">\n        <option model.bind="undefined">*base*</option>\n        <option repeat.for="subT of types[fieldBase].$subTypes | objectValues & signal:\'defUpdate\'" model.bind="subT">${subT.$name}</option>\n      </select>\n      <div if.bind="fieldSubtype.$params">\n        <div repeat.for="param of fieldSubtype.$params | objectValues">\n          ${param.$name}: <input type="text" value.bind="newFieldParams[param.$name]">\n        </div>\n      </div>\n    </div>\n    <br>\n    \x3c!--STS REPLACE END--\x3e\n    <button click.delegate="addScoped()">${buttonText}</button>\n    <button click.delegate="clearScoped()">Clear</button>\n    <button if.bind="buttonText==\'edit\'" click.delegate="del()">Delete</button>\n  </div>\n  <div repeat.for="field of pointer.$fields | objectValues | sorter:\'$order\':\'ascending\' & signal:\'defUpdate\'" click.trigger="edit(field)">\n    ${field.$name} ::\n    <span if.bind="field.$subType">${field.$subType} &isinv; </span>\n    ${field.$type}\n    <span if.bind="field.$lookup"> of ${field.$lookup}</span>\n    <span if.bind="field.$params" repeat.for="param of field.$params| objectEntries">&cup; ${param[0]}@${param[1]}  </span>\n  </div>\n\n</template>\n'},"resources/viewSections/editors/type.html":function(e,t,n){e.exports='<template bindable="type, subTypeOf, baseApp">\n  <require from="resources/viewElements/subTypeSelector" as="sub-type-selector"></require>\n  <h5>\n    Edit Type: ${type.$name}\n    <span if.bind="subTypeOf">\n      &nbsp;&nbsp;\n      sub of: ${subTypeOf}\n    </span>\n  </h5>\n  Description:&nbsp;<input type="text" value.bind="type.$description"><br />\n  Validator Function:&nbsp;<textarea type="text" value.bind="type.$validator"></textarea>\n  <div if.bind="type.$subTypes">\n    <p>\n      New Subtype:\n      <input type="text" value.bind="newSubTypeName">\n      <button click.delegate="baseApp.editTypeOf(type.$name, newSubTypeName)">+</button>\n    </p>\n    <p repeat.for="subT of type.$subTypes | objectValues">\n      <span click.delegate="baseApp.editTypeOf(type.$name, subT)">${subT.$name}</span>\n    </p>\n  </div>\n  <div if.bind="subTypeOf==\'Array\'">\n    Min Length:<input type="number" value.bind="type.$params.minimum"><br>\n    Max Length:<input type="number" value.bind="type.$params.maximum"><br>\n    <input type="hidden" value.bind="type.$params.allowed = []">\n    <input type="hidden" value.bind="(allowed = {})">\n    Contains types:\n    <sub-type-selector typing.bind="newContains" ></sub-type-selector>\n    <button click.delegate="type.$params.allowed.push(newContains) && (newContains = {})">Add</button>\n    <div repeat.for="type of type.$params.allowed">${type.base}::${type.subT}</div>\n  </div>\n  <div if.bind="subTypeOf && subTypeOf!=\'Array\'">\n    Parameters\n    <p repeat.for="param of type.$params | objectValues & signal:\'generalUpdate\'">\n      ${param.$name}:${param.$type}${param.$desc && " - "+param.$desc}\n    </p>\n    New parameter:<br>\n      <input type="hidden" value.one-time="(newParamType = {})">\n      <sub-type-selector typing.bind="newParamType"></sub-type-selector>\n    named: <input type="text" value.bind="newParamName"><br>\n    <input type="text" value.bind="newParamDesc" placeholder="description"><br>\n    <button click.delegate="(\n      type.$params[newParamName] ={\n         $name: newParamName\n        ,$type: newParamType.base\n        ,$subType: newParamType.subT\n        ,$lookup: newParamType.lookup_table\n        ,$desc: newParamDesc\n    }) && baseApp.signaler.signal(\'generalUpdate\')">Add</button>\n  </div>\n</template>\n'}},[[0,2,4,3,6,5,7,8]]]);
//# sourceMappingURL=app~f075b844.c9cd22bd9e8933c94bd1.bundle.map