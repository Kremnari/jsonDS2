(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{0:function(e,t,n){n("GAND"),n("GmYv"),e.exports=n("b9nV")},BEPO:function(e){e.exports=JSON.parse('{"a":false,"b":false}')},app:function(e,t,n){"use strict";n.r(t),n.d(t,"App",(function(){return r}));var i=n("Iab2");function s(e){return Object.keys(e).filter((function(e){return-1==e.indexOf("$")}))}var o={tables:{test:{name:"test",contents:[],$schema:[{name:"id",type:"number"},{name:"name",type:"string"}]},test2:{name:"test2",contents:[],$schema:[{name:"id",type:"number"},{name:"name",type:"string"},{name:"test",type:"boolean"}]}},types:{Boolean:{name:"Boolean",isPrimitive:!0},String:{name:"String",isPrimitive:!0},Number:{name:"Number",isPrimitive:!0},BigInt:{name:"BigInt",isPrimitive:!0},Array:{name:"Array",isPrimitive:!0},Object:{name:"Object",isPrimitive:!0}}};function a(e,t,n,i,s,o,a){try{var r=e[o](a),d=r.value}catch(e){return void n(e)}r.done?t(d):Promise.resolve(d).then(i,s)}var r=function(){function e(e){var t=this;this.tables=null,this.types=null,this.fileContents=o,this.editor={as:null},window.jds2=this,setTimeout((function(){t.init()}),0)}var t=e.prototype;return t.init=function(){this.tables=s(this.fileContents.tables),this.types=s(this.fileContents.types)},t.loadFile=function(){var e,t=(e=regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=JSON,e.next=3,t.target.files[0].text();case 3:e.t1=e.sent,this.fileContents=e.t0.parse.call(e.t0,e.t1),this.init();case 6:case"end":return e.stop()}}),e,this)})),function(){var t=this,n=arguments;return new Promise((function(i,s){var o=e.apply(t,n);function r(e){a(o,i,s,r,d,"next",e)}function d(e){a(o,i,s,r,d,"throw",e)}r(void 0)}))});return function(e){return t.apply(this,arguments)}}(),t.saveFile=function(){Object(i.saveAs)(new Blob([JSON.stringify(this.fileContents)],{type:"application/json"}),"gameSchema.jds2")},t.addNewTable=function(e){this.fileContents.tables[e]={name:e,contents:[],$schema:[]},this.tables.push(e)},t.addNewContentItem=function(e){var t={},n=this.fileContents.tables[this.editor.table].$schema;Object.values(n).forEach((function(e){t[e.name]=""})),this.fileContents.tables[this.editor.table].contents.push({name:e,props:t})},t.editContentItem=function(e){this.editor.CIEdit=this.editor.list[e]},t.showTableContent=function(e){this.editor.as="list",this.editor.table=e,this.editor.list=this.fileContents.tables[e].contents,this.editor.schema=this.fileContents.tables[e].$schema},t.editTableSchema=function(e){this.editor.table!=e?(this.editor.as="editTable",this.editor.table=e,this.editor.schema=this.fileContents.tables[e].$schema):this.editor={as:null}},t.addNewType=function(e){this.types.push(e)},t.editTypeOf=function(e){this.editor.as="editType"},t.addField=function(e,t){var n={name:e,type:t};this.editor.schema.push(n),this.editor.CIEdit.props[e]="",this.newFieldType=null,this.newFieldName=null},e}()},"app.css":function(e,t,n){(t=n("JPst")(!1)).push([e.i,"body > nav {\n  position: fixed\n\n}\ndiv.content {\n  position: absolute;\n  top: 40px;\n  bottom: 2px;\n  left: 2px;\n  right: 2px;\n\n}\n\n.content > section {\n  display: inline-block;\n  position: absolute;\n  border: 2px solid darkslategray;\n  border-radius: 5%;\n  box-sizing: border-box;\n  padding: 5px;\n}\n\n#tablesList {\n  top: 0;\n  left: 0;\n  height: 50%;\n  width: 40%;\n}\n\n#editorArea {\n  top: 0;\n  right: 0;\n  height: 70%;\n  width: 60%;\n}\n#editorArea ul {\n  height: 35%;\n  left: 0;\n  right: 0;\n  width: 40%;\n  position: relative;  \n  columns: 2;\n}\n#editorArea ul li {\n  display: inline;\n}\n#editorArea #CIEditor {\n  position: absolute;\n  height: 60%;\n  bottom: 0;\n}\n\n#typesList {\n  bottom: 0;\n  left: 0;\n  height: 50%;\n  width: 40%;\n}\n",""]),e.exports=t},"app.html":function(e,t,n){e.exports='<template>\n  <require from="app.css"></require>\n  <nav>\n    <input type="file" change.delegate="loadFile($event)" accept=".jds2,.json">Load JsDS</input>\n    <button click.delegate="saveFile()">Save Project</button>\n  </nav>\n  <div class="content">\n    <section id="tablesList">\n      <h4>Table/Object List</h4>\n      <div note="add new static content table">\n        <input type="text" value.bind="newTable"></input>\n        <button click.delegate="addNewTable(newTable)">+</button>\n      </div>\n      <div repeat.for="t of tables">\n        <span click.delegate="showTableContent(t)">${t}</span>\n        <span click.delegate="editTableSchema(t)">&#9998;</span>\n      </div>\n    </section>\n    <section id="editorArea">\n      <section if.bind="editor.as == \'list\'">\n        <div>\n          Add new Name:\n          <input type="text" value.bind="newContentName"></input>\n          <button click.delegate="addNewContentItem(newContentName)">+</button>\n        </div>\n        <ul>\n          <li repeat.for="contentItem of editor.list" click.delegate="editContentItem($index)">\n            ${contentItem.name}\n          </li>\n        </ul>\n        <div id="CIEditor" if.bind="editor.CIEdit">\n          ${editor.CIEdit.name}\n          Add new Field:\n          <select name="types" value.bind="newFieldType">\n            <option repeat.for="type of types" model.bind="type">${type}</option>\n          </select>\n          <input type="text" value.bind="newFieldName">name</input>\n          <button click.delegate="addField(newFieldName, newFieldType)">+</button>\n          <div repeat.for="prop of editor.schema">\n            ${prop.name} - ${prop.type}<input type="text" value.bind="editor.CIEdit.props[prop.name]"></input>\n          </div>\n        </div>\n\n      </section>\n      <section if.bind="editor.as == \'editTable\'">\n        <div repeat.for="value of editor.schema">\n\n        </div>\n      </section>\n      <section if.bind="editor.as == \'editType\'">\n        Edit Type\n      </section>\n    </section>\n    <section id="typesList">\n      <h4>Types List</h4>\n      <div note="add new type">\n        <input type="text" value.bind="newTypeName"></input>\n        <button click.delegate="addNewType(newTypeName)">+</button>\n      </div>\n      <div repeat.for="type of types">\n        <span click.delegate="editTypeOf(type)">${type}</span>\n        <div repeat.for="subT of type.subtypes" if.bind="type.subtypes">\n          <span click.delegate="editTypeOf(subT)">${subT.name}</span>\n        </div>\n      </div>\n    </section>\n    <section id="somethingsomethingdarkside">\n\n    </section>\n  </div>\n</template>\n'},main:function(e,t,n){"use strict";n.d(t,"configure",(function(){return s}));n("ls82");var i=n("BEPO");n("70NS");function s(e){e.use.standardConfiguration().feature("resources/index"),e.use.developmentLogging(i.a?"debug":"warn"),i.b&&e.use.plugin("aurelia-testing"),e.start().then((function(){return e.setRoot("app")}))}},"resources/index":function(e,t,n){"use strict";function i(e){}n.r(t),n.d(t,"configure",(function(){return i}))}},[[0,1,3,2,5,4,6,7]]]);
//# sourceMappingURL=app~f075b844.350ab597b9735e509564.bundle.map